{"version":3,"sources":["components/ConfigPanel.js","components/AuthPanel.js","components/InstrumentPanel.js","components/MoversPanel.js","components/OptionChainPanel.js","components/PriceHistoryPanel.js","components/QuotesPanel.js","components/AccPanel.js","components/OrdersPanel.js","components/TransactionsPanel.js","App.js","index.js"],"names":["ConfigPanel","props","useState","clientId","setClientId","redirectUri","setRedirectUri","storeAuth","setStoreAuth","logInRedirect","setLogInRedirect","type","value","placeholder","onChange","e","target","checked","onClick","buildClient","AuthPanel","logIn","query","URLSearchParams","window","location","search","code","get","APIClient","authentication","history","pushState","document","title","pathname","isLogIn","logOut","InstrumentsPanel","symbol","setSymbol","projection","setProjection","screenStr","setScreenStr","searchInstruments","a","endPoint","resJson","console","log","JSON","stringify","MoversPanel","index","setindex","direction","setDirection","change","setChange","DirectionOptions","map","option","ChangeOptions","getMovers","OptionChainPanel","ContractOptions","contractType","setContractType","strikeCount","setStrikeCount","includeQuotes","setIncludeQuotes","StrategyOptions","strategy","setStrategy","strikeInterval","setStrikeInterval","strike","setStrike","RangeOptions","range","setRange","fromDate","setFromDate","toDate","setToDate","volatility","setVolatility","underlyingPrice","setUnderlyingPrice","interestRate","setInterestRate","daysToExpiration","setDaysToExpiration","expMonth","setExpMonth","OptionTypeOptions","optionType","setOptionType","getOptionChain","params","interval","Date","PriceHistoryPanel","PeriodTypeOptions","periodType","setPeriodType","period","setPeriod","FrequencyTypeOptions","frequencyType","setFrequencyType","frequency","setFrequency","endDate","setEndDate","startDate","setStartDate","needExtendedHoursData","setNeedExtendedHoursData","getHistory","getPriceHistory","QuotesPanel","symbols","setSymbols","getQuote","getQuotes","split","AccPanel","getAccs","getAccounts","OrdersPanel","accountId","setAccountId","quantity","setQuantity","orderType","setOrderType","price","setPrice","instruction","setInstruction","orderId","setOrderId","fromEnteredTime","setFromEnteredTime","toEnteredTime","setToEnteredTime","placeEquity","placeOrderEquity","cancelOrder","getOrders","getOrdersByPath","undefined","TransactionsPanel","transactionId","setTransactionId","TypeOptions","setType","getTransaction","getTransactions","App","setAPIClient","setIsLogIn","tabsSelected","setTabsSelected","unauthTabOptions","authTabOptions","TabOptions","config","TDAPI","afterLogIn","afterLogOut","newSelection","options","i","length","selected","push","handleTabOptions","multiple","size","includes","accounts","orders","transactionHistory","instruments","unauthenticated","movers","optionChains","priceHistory","quotes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.94399643.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst ConfigPanel = (props) => {\n  const [clientId, setClientId] = useState('@AMER.OAUTHAP');\n  const [redirectUri, setRedirectUri] = useState('https://dos077.github.io/api-demo-react/');\n  const [storeAuth, setStoreAuth] = useState(true);\n  const [logInRedirect, setLogInRedirect] = useState(true);\n\n  const buildClient = () => {\n    props.buildClient({\n      clientId, redirectUri, storeAuth, logInRedirect\n    });\n  }\n\n  return (\n    <section>\n      <h2>Setup API Client</h2>\n      <label>API Key:</label>\n      <input type=\"text\" value={clientId} placeholder=\"apiky@AMER.OAUTHAP\" onChange={(e) => setClientId(e.target.value)} />\n      <label>Redirect URI:</label>\n      <input type=\"text\" value={redirectUri} onChange={(e) => setRedirectUri(e.target.value)} />\n      <label>Local Store Token</label>\n      <input type=\"checkbox\" checked={storeAuth} onChange={(e) => setStoreAuth(e.target.checked)} />\n      <label>Redirect for Login</label>\n      <input type=\"checkbox\" checked={logInRedirect} onChange={(e) => setLogInRedirect(e.target.checked)} />\n      <button onClick={buildClient} value=\"initialize client\">\n        initialize client\n      </button>\n    </section>\n  )\n}\n\nexport default ConfigPanel;\n","const AuthPanel = (props) => {\n  const logIn = () => {\n    const query = new URLSearchParams(window.location.search);\n    const code = query ? query.get('code') : null;\n    props.APIClient.authentication.logIn(code);\n    window.history.pushState({}, document.title, window.location.pathname);\n  }\n\n  const logOut = () => {\n    props.APIClient.authentication.logOut();\n  }\n\n  if (window.location.search && (new URLSearchParams(window.location.search)).get('code'))\n    logIn();\n\n  return (\n    <section>\n      <h2>Option Chain</h2>\n      { !props.isLogIn && <p>\n        If logInRedirect is set to true, click login to be redirected to TD Ameritrade OAuth portal.\n      </p> }\n      { !props.isLogIn && <button onClick={logIn} >login</button> }\n      { props.isLogIn && <button onClick={logOut} >logout</button> }\n    </section>\n  );\n};\n\nexport default AuthPanel;\n","import React, { useState } from 'react';\n\nconst InstrumentsPanel = (props) => {\n  // const [cusip, setCusip] = useState();\n  const [symbol, setSymbol] = useState('');\n  const [projection, setProjection] = useState('fundamental');\n  const [screenStr, setScreenStr] = useState('');\n\n  const searchInstruments = async () => {\n    const resJson = await props.endPoint.searchInstruments({\n      symbol,\n      projection,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Instruments</h2>\n      <p>\n        <label>Search Instruments</label>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>projection</label>\n        <input type=\"text\" value={projection} onChange={(e) => setProjection(e.target.value)} />\n        <button onClick={searchInstruments}>search</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default InstrumentsPanel;\n","import React, { useState } from 'react';\n\nconst MoversPanel = (props) => {\n  const [index, setindex] = useState('');\n  const [direction, setDirection] = useState('up');\n  const [change, setChange] = useState('value');\n  const [screenStr, setScreenStr] = useState('');\n\n  const DirectionOptions = () => ['up', 'down'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const ChangeOptions = () => ['value', 'percent'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n\n  const getMovers = async () => {\n    const resJson = await props.endPoint.getMovers({\n      index,\n      direction,\n      change,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Movers</h2>\n      <p>\n        <label>Show Movers</label>\n        <label>index</label>\n        <input type=\"text\" value={index} placeholder=\"ie. $COMPX, $DJI\" onChange={e => setindex(e.target.value)} />\n        <label>direction</label>\n        <select value={direction} onChange={e => setDirection(e.target.value)}>\n          <DirectionOptions />\n        </select>\n        <label>change</label>\n        <select v-value={change} onChange={e => setChange(e.target.value)}>\n          <ChangeOptions />\n        </select>\n        <button onClick={getMovers}>get movers</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  );\n}\n\nexport default MoversPanel;\n","import React, { useState } from 'react';\n\nconst OptionChainPanel = (props) => {\n  const [symbol, setSymbol] = useState('');\n  const ContractOptions = () => ['ALL', 'CALL', 'PUT'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [contractType, setContractType] = useState('ALL');\n  const [strikeCount, setStrikeCount] = useState(5);\n  const [includeQuotes, setIncludeQuotes] = useState(false);\n  const StrategyOptions = () => ['SINGLE',\n    'ANALYTICAL',\n    'COVERED',\n    'VERTICAL',\n    'CALENDAR',\n    'STRANGLE',\n    'STRADDLE',\n    'BUTTERFLY',\n    'CONDOR',\n    'DIAGONAL',\n    'COLLAR',\n    'ROLL',\n  ].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [strategy, setStrategy] = useState('SINGLE');\n  const [strikeInterval, setStrikeInterval] = useState('');\n  const [strike, setStrike] = useState('');\n  const RangeOptions = () => ['ALL', 'ITM', 'NTM', 'OTM', 'SAK', 'SBK', 'SNK'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [range, setRange] = useState('ALL');\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [volatility, setVolatility] = useState('');\n  const [underlyingPrice, setUnderlyingPrice] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [daysToExpiration, setDaysToExpiration] = useState('');\n  const [expMonth, setExpMonth] = useState('');\n  const OptionTypeOptions = () => ['S', 'NS', 'ALL'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [optionType, setOptionType] = useState('ALL');\n  const [screenStr, setScreenStr] = useState('');\n\n  const getOptionChain = async () => {\n    const params = {\n      symbol,\n      contractType,\n      strikeCount,\n      includeQuotes,\n      strategy,\n      interval: strikeInterval,\n      strike,\n      range,\n      fromDate: fromDate ? new Date(fromDate) : null,\n      toDate: toDate ? new Date(toDate) : null,\n      volatility,\n      underlyingPrice,\n      interestRate,\n      daysToExpiration,\n      expMonth,\n      optionType,\n    };\n    const resJson = await props.endPoint.getOptionChain(params);\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Option Chain</h2>\n      <p>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>contract type</label>\n        <select value={contractType} onChange={e => setContractType(e.target.value)}>\n          <ContractOptions />\n        </select>\n        <label>strike count</label>\n        <input type=\"text\" value={strikeCount} onChange={(e) => setStrikeCount(e.target.value)} />\n        <label>include quotes</label>\n        <input type=\"checkbox\" checked={includeQuotes} onChange={(e) => setIncludeQuotes(e.target.checked)} />\n        <label>strategy</label>\n        <select value={strategy} onChange={e => setStrategy(e.target.value)}>\n          <StrategyOptions />\n        </select>\n        <label>interval</label>\n        <input type=\"text\" value={strikeInterval} onChange={(e) => setStrikeInterval(e.target.value)} />\n        <label>strike</label>\n        <input type=\"text\" value={strike} onChange={(e) => setStrike(e.target.value)} />\n        <label>range</label>\n        <select value={range} onChange={e => setRange(e.target.value)}>\n          <RangeOptions />\n        </select>\n        <label>from date</label>\n        <input type=\"date\" value={fromDate} onChange={(e) => setFromDate(e.target.value)} />\n        <label>to date</label>\n        <input type=\"date\" value={toDate} onChange={(e) => setToDate(e.target.value)} />\n        <label>volatility</label>\n        <input type=\"text\" value={volatility} onChange={(e) => setVolatility(e.target.value)} />\n        <label>underlying price</label>\n        <input type=\"text\" value={underlyingPrice} onChange={(e) => setUnderlyingPrice(e.target.value)} />\n        <label>interest rate</label>\n        <input type=\"text\" value={interestRate} onChange={(e) => setInterestRate(e.target.value)} />\n        <label>days to expiration</label>\n        <input type=\"text\" value={daysToExpiration} onChange={(e) => setDaysToExpiration(e.target.value)} />\n        <label>expire mont</label>\n        <input type=\"text\" value={expMonth} onChange={(e) => setExpMonth(e.target.value)} />\n        <label>option type</label>\n        <select value={optionType} onChange={e => setOptionType(e.target.value)}>\n          <OptionTypeOptions />\n        </select>\n\n        <button onClick={getOptionChain}>get chain</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default OptionChainPanel;\n","import React, { useState } from 'react';\n\nconst PriceHistoryPanel = (props) => {\n  const [symbol, setSymbol] = useState('');\n  const PeriodTypeOptions = () => ['day', 'month', 'year', 'ytd'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [periodType, setPeriodType] = useState('day');\n  const [period, setPeriod] = useState(1);\n  const FrequencyTypeOptions = () => ['minute', 'daily', 'weekly', 'monthly'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [frequencyType, setFrequencyType] = useState('minute');\n  const [frequency, setFrequency] = useState(1);\n  const [endDate, setEndDate] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [needExtendedHoursData, setNeedExtendedHoursData] = useState(false);\n  const [screenStr, setScreenStr] = useState('');\n\n  const getHistory = async () => {\n    const resJson = await props.endPoint.getPriceHistory({\n      symbol,\n      periodType,\n      period,\n      frequencyType,\n      frequency,\n      endDate: endDate ? new Date(endDate) : null,\n      startDate: startDate ? new Date(startDate) : null,\n      needExtendedHoursData,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  };\n\n  return (\n    <section>\n      <h2>Price History</h2>\n      <p>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>period type</label>\n        <select value={periodType} onChange={e => setPeriodType(e.target.value)}>\n          <PeriodTypeOptions />\n        </select>\n        <label>period</label>\n        <input type=\"text\" value={period} onChange={(e) => setPeriod(e.target.value)} />\n        <label>frequency type</label>\n        <select value={frequencyType} onChange={e => setFrequencyType(e.target.value)}>\n          <FrequencyTypeOptions />\n        </select>\n        <label>frequency</label>\n        <input type=\"text\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n        <label>start date</label>\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        <label>end date</label>\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        <label>Extended Hour Data</label>\n        <input type=\"checkbox\" checked={needExtendedHoursData} onChange={(e) => setNeedExtendedHoursData(e.target.checked)} />\n        <button onClick={getHistory}>get history</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  );\n}\n\nexport default PriceHistoryPanel;\n","import React, { useState } from 'react';\n\nconst QuotesPanel = (props) => {  \n  const [symbol, setSymbol] = useState('');\n  const [symbols, setSymbols] = useState('');\n  const [screenStr, setScreenStr] = useState('');\n\n  const getQuote = async () => {\n    const resJson = await props.endPoint.getQuote({ symbol });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  const getQuotes = async () => {\n    const resJson = await props.endPoint.getQuotes({ symbols: symbols.split(' ') });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Quotes</h2>\n      <p>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <button onClick={getQuote}>get quote</button>\n      </p>\n      <p>\n        <label>symbols</label>\n        <input type=\"text\" value={symbols} onChange={(e) => setSymbols(e.target.value)} placeholder=\"separated by space\" />\n        <button onClick={getQuotes}>get quotes</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  );\n};\n\nexport default QuotesPanel;\n","import React, { useState } from 'react';\n\nconst AccPanel = (props) => {\n  const [screenStr, setScreenStr] = useState('');\n  \n  const getAccs = async () => {\n    const resJson = await props.endPoint.getAccounts();\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Account Info</h2>\n      <p>\n        <button onClick={getAccs}>get accounts</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default AccPanel;\n","import React, { useState } from 'react';\n\nconst OrdersPanel = (props) => {  \n  const [accountId, setAccountId] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [quantity, setQuantity] = useState(0);\n  const [orderType, setOrderType] = useState('MARKET');\n  const [price, setPrice] = useState('');\n  const [instruction, setInstruction] = useState('');\n  const [orderId, setOrderId] = useState('');\n  const [fromEnteredTime, setFromEnteredTime] = useState('');\n  const [toEnteredTime, setToEnteredTime] = useState('');\n  const [screenStr, setScreenStr] = useState('');\n\n  const placeEquity = async () => {\n    await props.endPoint.placeOrderEquity({\n      accountId,\n      quantity,\n      symbol,\n      orderType,\n      price,\n      instruction,\n    });\n  }\n\n  const cancelOrder = async () => {    \n    await props.endPoint.cancelOrder({ accountId, orderId });\n  }\n\n  const getOrders = async () => {\n    const resJson = await props.endPoint.getOrdersByPath({\n      accountId,\n      fromEnteredTime: fromEnteredTime\n        ? new Date(fromEnteredTime)\n        : undefined,\n      toEnteredTime: toEnteredTime ? new Date(toEnteredTime) : undefined,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Orders</h2>\n      <p>\n        <label>Place Equity Order(Placing Actual Order in Your Account!)</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>quantity</label>\n        <input type=\"text\" value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n        <label>order type</label>\n        <input type=\"text\" value={orderType} onChange={(e) => setOrderType(e.target.value)} />\n        <label>price</label>\n        <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder=\"for limit order\" />\n        <label>instruction</label>\n        <input type=\"text\" value={instruction} onChange={(e) => setInstruction(e.target.value)} placeholder=\"BUY or SELL\" />\n        <button onClick={placeEquity}>place order</button>\n      </p>\n      <p>\n        <label>Cancel Order</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>order ID</label>\n        <input type=\"text\" value={orderId} onChange={(e) => setOrderId(e.target.value)} />\n        <button onClick={cancelOrder}>cancel order</button>\n      </p>\n      <p>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>from entered date</label>\n        <input type=\"date\" value={fromEnteredTime} onChange={(e) => setFromEnteredTime(e.target.value)} />\n        <label>to entered date</label>\n        <input type=\"date\" value={toEnteredTime} onChange={(e) => setToEnteredTime(e.target.value)} />\n        <button onClick={getOrders}>get orders</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default OrdersPanel;\n","import React, { useState } from 'react';\n\nconst TransactionsPanel = (props) => {\n  const [accountId, setAccountId] = useState('');\n  const [transactionId, setTransactionId] = useState('');\n  const TypeOptions = () => [\n    'ALL',\n    'TRADE',\n    'BUY_ONLY',\n    'SELL_ONLY',\n    'CASH_IN_OR_CASH_OUT',\n    'CHECKING',\n    'DIVIDEND',\n    'INTEREST',\n    'OTHER',\n    'ADVISOR_FEES',\n  ].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [type, setType] = useState('ALL');\n  const [symbol, setSymbol] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [screenStr, setScreenStr] = useState('');\n\n  const getTransaction = async () => {\n    const resJson = await props.endPoint.getTransaction({\n      accountId,\n      transactionId,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  const getTransactions = async () => {\n    const resJson = await props.endPoint.getTransactions({\n      type,\n      symbol,\n      accountId,\n      endDate: endDate ? new Date(endDate) : undefined,\n      startDate: startDate ? new Date(startDate) : undefined,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Transactions</h2>\n      <p>\n        <label>get transaction</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>transaction ID</label>\n        <input type=\"text\" value={transactionId} onChange={(e) => setTransactionId(e.target.value)} />\n        <button onClick={getTransaction}>get transaction</button>\n      </p>\n      <p>\n        <label>get transactions</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>type</label>\n        <select value={type} onChange={e => setType(e.target.value)}>\n          <TypeOptions />\n        </select>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>start date</label>\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        <label>end date</label>\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        <button onClick={getTransactions}>get transactions</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default TransactionsPanel;","import React, { useState } from 'react';\nimport TDAPI from '@i077/tda-api-nodejs-unofficial';\n\nimport './App.css';\nimport ConfigPanel from './components/ConfigPanel';\nimport AuthPanel from './components/AuthPanel';\nimport InstrumentsPanel from './components/InstrumentPanel';\nimport MoversPanel from './components/MoversPanel';\nimport OptionChainPanel from './components/OptionChainPanel';\nimport PriceHistoryPanel from './components/PriceHistoryPanel';\nimport QuotesPanel from './components/QuotesPanel';\nimport AccPanel from './components/AccPanel';\nimport OrdersPanel from './components/OrdersPanel';\nimport TransactionsPanel from './components/TransactionsPanel';\n\nconst App = () => {\n  const [APIClient, setAPIClient] = useState(undefined);\n  const [isLogIn, setIsLogIn] = useState(false);\n  const [tabsSelected, setTabsSelected] = useState([]);\n  \n  const unauthTabOptions = ['instruments', 'movers', 'options', 'priceHistory', 'quotes'];\n  const authTabOptions = ['account', 'orders', 'transactions'];\n\n  const TabOptions = () =>\n    (isLogIn ? [...unauthTabOptions, ...authTabOptions] : unauthTabOptions)\n      .map(option => <option key={option} value={option}>{option}</option>);\n\n  const handleTabOptions = (e) => {\n    const newSelection = [];\n    const options = e.target;\n    for (let i = 0; i < options.length; i++) {\n      const { selected, value } = options[i];\n      if (selected) newSelection.push(value);\n    }\n    setTabsSelected(newSelection);\n  }\n\n  const buildClient = (config) => {\n    setAPIClient(TDAPI({\n      ...config,\n      afterLogIn: () => { setIsLogIn(true) },\n      afterLogOut: () => { setIsLogIn(false) }\n    }));\n  }\n\n  return (\n    <div>\n      { !APIClient &&\n        <ConfigPanel buildClient={buildClient} />\n      }\n\n      { APIClient &&\n        <select\n          value={tabsSelected}\n          onChange={(e)=> {handleTabOptions(e)}}\n          multiple={true}\n          size=\"5\"\n        >\n          <TabOptions />\n        </select>\n      }\n      \n      { APIClient && <AuthPanel APIClient={APIClient} isLogIn={isLogIn} /> }\n\n      { (APIClient && isLogIn && tabsSelected.includes('account')) &&\n        <AccPanel endPoint={APIClient.accounts} /> }\n      { (APIClient && isLogIn && tabsSelected.includes('orders')) &&\n        <OrdersPanel endPoint={APIClient.orders} /> }\n      { (APIClient && isLogIn && tabsSelected.includes('transasctions')) &&\n         <TransactionsPanel endPoint={APIClient.transactionHistory} /> }\n      \n      { (APIClient && tabsSelected.includes('instruments')) &&\n        <InstrumentsPanel endPoint={isLogIn ? APIClient.instruments : APIClient.instruments.unauthenticated } /> }\n      { (APIClient && tabsSelected.includes('movers')) &&\n        <MoversPanel endPoint={isLogIn ? APIClient.movers : APIClient.movers.unauthenticated} /> }\n      { (APIClient && tabsSelected.includes('options')) &&\n        <OptionChainPanel endPoint={isLogIn ? APIClient.optionChains : APIClient.optionChains.unauthenticated} /> }\n      { (APIClient && tabsSelected.includes('priceHistory')) &&\n        <PriceHistoryPanel endPoint={isLogIn ? APIClient.priceHistory : APIClient.priceHistory.unauthenticated} /> }\n      { (APIClient && tabsSelected.includes('quotes')) &&\n        <QuotesPanel endPoint={isLogIn ? APIClient.quotes : APIClient.quotes.unauthenticated} /> }\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}