{"version":3,"sources":["components/ConfigPanel.js","components/AuthPanel.js","components/InstrumentPanel.js","components/MoversPanel.js","components/OptionChainPanel.js","components/PriceHistoryPanel.js","components/QuotesPanel.js","components/AccPanel.js","components/OrdersPanel.js","components/TransactionsPanel.js","App.js","index.js"],"names":["ConfigPanel","props","useState","clientId","setClientId","redirectUri","setRedirectUri","storeAuth","setStoreAuth","logInRedirect","setLogInRedirect","scope","setScope","ScopeOptions","map","option","value","type","placeholder","onChange","e","target","checked","newSelection","options","i","length","selected","push","handleOptions","multiple","size","onClick","buildClient","AuthPanel","logIn","query","URLSearchParams","window","location","search","code","get","APIClient","authentication","history","pushState","document","title","pathname","isLogIn","logOut","InstrumentsPanel","symbol","setSymbol","projection","setProjection","screenStr","setScreenStr","searchInstruments","a","endPoint","resJson","console","log","JSON","stringify","MoversPanel","index","setindex","direction","setDirection","change","setChange","DirectionOptions","ChangeOptions","getMovers","OptionChainPanel","ContractOptions","contractType","setContractType","strikeCount","setStrikeCount","includeQuotes","setIncludeQuotes","StrategyOptions","strategy","setStrategy","strikeInterval","setStrikeInterval","strike","setStrike","RangeOptions","range","setRange","fromDate","setFromDate","toDate","setToDate","volatility","setVolatility","underlyingPrice","setUnderlyingPrice","interestRate","setInterestRate","daysToExpiration","setDaysToExpiration","expMonth","setExpMonth","OptionTypeOptions","optionType","setOptionType","getOptionChain","params","interval","Date","PriceHistoryPanel","PeriodTypeOptions","periodType","setPeriodType","period","setPeriod","FrequencyTypeOptions","frequencyType","setFrequencyType","frequency","setFrequency","endDate","setEndDate","startDate","setStartDate","needExtendedHoursData","setNeedExtendedHoursData","getHistory","getPriceHistory","QuotesPanel","symbols","setSymbols","getQuote","getQuotes","split","AccPanel","fields","setFields","FieldsOptions","getAccs","getAccounts","OrdersPanel","accountId","setAccountId","quantity","setQuantity","orderType","setOrderType","price","setPrice","instruction","setInstruction","orderId","setOrderId","fromEnteredTime","setFromEnteredTime","toEnteredTime","setToEnteredTime","placeEquity","placeOrderEquity","cancelOrder","getOrders","getOrdersByPath","undefined","TransactionsPanel","transactionId","setTransactionId","TypeOptions","setType","getTransaction","getTransactions","App","setAPIClient","setIsLogIn","tabsSelected","setTabsSelected","unauthTabOptions","authTabOptions","TabOptions","config","TDAPI","afterLogIn","afterLogOut","handleTabOptions","includes","accounts","orders","transactionHistory","instruments","unauthenticated","movers","optionChains","priceHistory","quotes","ReactDOM","render","StrictMode","getElementById"],"mappings":"wPAwDeA,EAtDK,SAACC,GACnB,MAAgCC,mBAAS,iBAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCF,mBAAS,4CAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEMC,EAAe,iBACnB,CAAC,cAAe,gBAAiB,aAC9BC,KAAI,SAAAC,GAAM,OAAI,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAkBhC,OACE,oCACE,kDACA,6CACA,uBAAOE,KAAK,OAAOD,MAAOb,EAAUe,YAAY,qBAAqBC,SAAU,SAACC,GAAD,OAAOhB,EAAYgB,EAAEC,OAAOL,UAC3G,kDACA,uBAAOC,KAAK,OAAOD,MAAOX,EAAac,SAAU,SAACC,GAAD,OAAOd,EAAec,EAAEC,OAAOL,UAChF,sDACA,uBAAOC,KAAK,WAAWK,QAASf,EAAWY,SAAU,SAACC,GAAD,OAAOZ,EAAaY,EAAEC,OAAOC,YAClF,uDACA,uBAAOL,KAAK,WAAWK,QAASb,EAAeU,SAAU,SAACC,GAAD,OAAOV,EAAiBU,EAAEC,OAAOC,YAC1F,0CACA,wBACEN,MAAOL,EACPQ,SAAU,SAACC,IA9BK,SAACA,GAGrB,IAFA,IAAMG,EAAe,GACfC,EAAUJ,EAAEC,OACTI,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAAK,CACvC,MAA4BD,EAAQC,GAA5BE,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,MACdW,GAAUJ,EAAaK,KAAKZ,GAElCJ,EAASW,GAuBYM,CAAcT,IAC/BU,UAAU,EACVC,KAAK,IAJP,SAME,cAAClB,EAAD,MAEF,wBAAQmB,QA1BQ,WAClB/B,EAAMgC,YAAY,CAChB9B,WAAUE,cAAaE,YAAWE,gBAAeE,WAwBnBK,MAAM,oBAApC,mCCtBSkB,EA3BG,SAACjC,GACjB,IAAMkC,EAAQ,WACZ,IAAMC,EAAQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAC5CC,EAAOL,EAAQA,EAAMM,IAAI,QAAU,KACzCzC,EAAM0C,UAAUC,eAAeT,MAAMM,GACrCH,OAAOO,QAAQC,UAAU,GAAIC,SAASC,MAAOV,OAAOC,SAASU,WAU/D,OAHIX,OAAOC,SAASC,QAAW,IAAIH,gBAAgBC,OAAOC,SAASC,QAASE,IAAI,SAC9EP,IAGA,oCACE,+CACGlC,EAAMiD,SAAW,8HAGjBjD,EAAMiD,SAAW,wBAAQlB,QAASG,EAAjB,mBAClBlC,EAAMiD,SAAW,wBAAQlB,QAdhB,WACb/B,EAAM0C,UAAUC,eAAeO,UAaV,wB,uBCWVC,EA/BU,SAACnD,GAExB,MAA4BC,mBAAS,IAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAAoCpD,mBAAS,eAA7C,mBAAOqD,EAAP,KAAmBC,EAAnB,KACA,EAAkCtD,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEMC,EAAiB,uCAAG,4BAAAC,EAAA,sEACF3D,EAAM4D,SAASF,kBAAkB,CACrDN,SACAE,eAHsB,OAClBO,EADkB,OAKxBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IANJ,2CAAH,qDASvB,OACE,oCACE,6CACA,8BACE,uDACA,2CACA,uBAAO7C,KAAK,OAAOD,MAAOqC,EAAQlC,SAAU,SAACC,GAAD,OAAOkC,EAAUlC,EAAEC,OAAOL,UACtE,+CACA,uBAAOC,KAAK,OAAOD,MAAOuC,EAAYpC,SAAU,SAACC,GAAD,OAAOoC,EAAcpC,EAAEC,OAAOL,UAC9E,wBAAQgB,QAAS2B,EAAjB,uBAEF,4BAAIF,QCmBKU,EA7CK,SAAClE,GACnB,MAA0BC,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAAkCnE,mBAAS,MAA3C,mBAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAA4BrE,mBAAS,SAArC,mBAAOsE,EAAP,KAAeC,EAAf,KACA,EAAkCvE,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEMgB,EAAmB,iBAAM,CAAC,KAAM,QAAQ5D,KAAI,SAAAC,GAAM,OACtD,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAET4D,EAAgB,iBAAM,CAAC,QAAS,WAAW7D,KAAI,SAAAC,GAAM,OACzD,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAGT6D,EAAS,uCAAG,4BAAAhB,EAAA,sEACM3D,EAAM4D,SAASe,UAAU,CAC7CR,QACAE,YACAE,WAJc,OACVV,EADU,OAMhBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IAPZ,2CAAH,qDAUf,OACE,oCACE,wCACA,8BACE,gDACA,0CACA,uBAAO7C,KAAK,OAAOD,MAAOoD,EAAOlD,YAAY,mBAAmBC,SAAU,SAAAC,GAAC,OAAIiD,EAASjD,EAAEC,OAAOL,UACjG,8CACA,wBAAQA,MAAOsD,EAAWnD,SAAU,SAAAC,GAAC,OAAImD,EAAanD,EAAEC,OAAOL,QAA/D,SACE,cAAC0D,EAAD,MAEF,2CACA,wBAAQ,UAASF,EAAQrD,SAAU,SAAAC,GAAC,OAAIqD,EAAUrD,EAAEC,OAAOL,QAA3D,SACE,cAAC2D,EAAD,MAEF,wBAAQ3C,QAAS4C,EAAjB,2BAEF,4BAAInB,QC+EKoB,EAvHU,SAAC5E,GACxB,MAA4BC,mBAAS,IAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACMwB,EAAkB,iBAAM,CAAC,MAAO,OAAQ,OAAOhE,KAAI,SAAAC,GAAM,OAC7D,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,EAAwCb,mBAAS,OAAjD,mBAAO6E,EAAP,KAAqBC,EAArB,KACA,EAAsC9E,mBAAS,GAA/C,mBAAO+E,EAAP,KAAoBC,EAApB,KACA,EAA0ChF,oBAAS,GAAnD,mBAAOiF,EAAP,KAAsBC,EAAtB,KACMC,EAAkB,iBAAM,CAAC,SAC7B,aACA,UACA,WACA,WACA,WACA,WACA,YACA,SACA,WACA,SACA,QACAvE,KAAI,SAAAC,GAAM,OACV,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,EAAgCb,mBAAS,UAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAA4CrF,mBAAS,IAArD,mBAAOsF,EAAP,KAAuBC,EAAvB,KACA,EAA4BvF,mBAAS,IAArC,mBAAOwF,EAAP,KAAeC,EAAf,KACMC,EAAe,iBAAM,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAO9E,KAAI,SAAAC,GAAM,OACrF,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,EAA0Bb,mBAAS,OAAnC,mBAAO2F,EAAP,KAAcC,EAAd,KACA,EAAgC5F,mBAAS,IAAzC,mBAAO6F,EAAP,KAAiBC,EAAjB,KACA,EAA4B9F,mBAAS,IAArC,mBAAO+F,EAAP,KAAeC,EAAf,KACA,EAAoChG,mBAAS,IAA7C,mBAAOiG,EAAP,KAAmBC,EAAnB,KACA,EAA8ClG,mBAAS,IAAvD,oBAAOmG,GAAP,MAAwBC,GAAxB,MACA,GAAwCpG,mBAAS,IAAjD,qBAAOqG,GAAP,MAAqBC,GAArB,MACA,GAAgDtG,mBAAS,IAAzD,qBAAOuG,GAAP,MAAyBC,GAAzB,MACA,GAAgCxG,mBAAS,IAAzC,qBAAOyG,GAAP,MAAiBC,GAAjB,MACMC,GAAoB,iBAAM,CAAC,IAAK,KAAM,OAAO/F,KAAI,SAAAC,GAAM,OAC3D,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,GAAoCb,mBAAS,OAA7C,qBAAO4G,GAAP,MAAmBC,GAAnB,MACA,GAAkC7G,mBAAS,IAA3C,qBAAOuD,GAAP,MAAkBC,GAAlB,MAEMsD,GAAc,uCAAG,8BAAApD,EAAA,6DACfqD,EAAS,CACb5D,SACA0B,eACAE,cACAE,gBACAG,WACA4B,SAAU1B,EACVE,SACAG,QACAE,SAAUA,EAAW,IAAIoB,KAAKpB,GAAY,KAC1CE,OAAQA,EAAS,IAAIkB,KAAKlB,GAAU,KACpCE,aACAE,mBACAE,gBACAE,oBACAE,YACAG,eAjBmB,SAmBC7G,EAAM4D,SAASmD,eAAeC,GAnB/B,OAmBfnD,EAnBe,OAoBrBC,QAAQC,IAAIF,GACZJ,GAAaO,KAAKC,UAAUJ,IArBP,2CAAH,qDAwBpB,OACE,oCACE,8CACA,8BACE,2CACA,uBAAO7C,KAAK,OAAOD,MAAOqC,EAAQlC,SAAU,SAACC,GAAD,OAAOkC,EAAUlC,EAAEC,OAAOL,UACtE,kDACA,wBAAQA,MAAO+D,EAAc5D,SAAU,SAAAC,GAAC,OAAI4D,EAAgB5D,EAAEC,OAAOL,QAArE,SACE,cAAC8D,EAAD,MAEF,iDACA,uBAAO7D,KAAK,OAAOD,MAAOiE,EAAa9D,SAAU,SAACC,GAAD,OAAO8D,EAAe9D,EAAEC,OAAOL,UAChF,mDACA,uBAAOC,KAAK,WAAWK,QAAS6D,EAAehE,SAAU,SAACC,GAAD,OAAOgE,EAAiBhE,EAAEC,OAAOC,YAC1F,6CACA,wBAAQN,MAAOsE,EAAUnE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,EAAEC,OAAOL,QAA7D,SACE,cAACqE,EAAD,MAEF,6CACA,uBAAOpE,KAAK,OAAOD,MAAOwE,EAAgBrE,SAAU,SAACC,GAAD,OAAOqE,EAAkBrE,EAAEC,OAAOL,UACtF,2CACA,uBAAOC,KAAK,OAAOD,MAAO0E,EAAQvE,SAAU,SAACC,GAAD,OAAOuE,EAAUvE,EAAEC,OAAOL,UACtE,0CACA,wBAAQA,MAAO6E,EAAO1E,SAAU,SAAAC,GAAC,OAAI0E,EAAS1E,EAAEC,OAAOL,QAAvD,SACE,cAAC4E,EAAD,MAEF,8CACA,uBAAO3E,KAAK,OAAOD,MAAO+E,EAAU5E,SAAU,SAACC,GAAD,OAAO4E,EAAY5E,EAAEC,OAAOL,UAC1E,4CACA,uBAAOC,KAAK,OAAOD,MAAOiF,EAAQ9E,SAAU,SAACC,GAAD,OAAO8E,EAAU9E,EAAEC,OAAOL,UACtE,+CACA,uBAAOC,KAAK,OAAOD,MAAOmF,EAAYhF,SAAU,SAACC,GAAD,OAAOgF,EAAchF,EAAEC,OAAOL,UAC9E,qDACA,uBAAOC,KAAK,OAAOD,MAAOqF,GAAiBlF,SAAU,SAACC,GAAD,OAAOkF,GAAmBlF,EAAEC,OAAOL,UACxF,kDACA,uBAAOC,KAAK,OAAOD,MAAOuF,GAAcpF,SAAU,SAACC,GAAD,OAAOoF,GAAgBpF,EAAEC,OAAOL,UAClF,uDACA,uBAAOC,KAAK,OAAOD,MAAOyF,GAAkBtF,SAAU,SAACC,GAAD,OAAOsF,GAAoBtF,EAAEC,OAAOL,UAC1F,gDACA,uBAAOC,KAAK,OAAOD,MAAO2F,GAAUxF,SAAU,SAACC,GAAD,OAAOwF,GAAYxF,EAAEC,OAAOL,UAC1E,gDACA,wBAAQA,MAAO8F,GAAY3F,SAAU,SAAAC,GAAC,OAAI2F,GAAc3F,EAAEC,OAAOL,QAAjE,SACE,cAAC6F,GAAD,MAGF,wBAAQ7E,QAASgF,GAAjB,0BAEF,4BAAIvD,SCnDK2D,EA/DW,SAACnH,GACzB,MAA4BC,mBAAS,IAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACM+D,EAAoB,iBAAM,CAAC,MAAO,QAAS,OAAQ,OAAOvG,KAAI,SAAAC,GAAM,OACxE,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,EAAoCb,mBAAS,OAA7C,mBAAOoH,EAAP,KAAmBC,EAAnB,KACA,EAA4BrH,mBAAS,GAArC,mBAAOsH,EAAP,KAAeC,EAAf,KACMC,EAAuB,iBAAM,CAAC,SAAU,QAAS,SAAU,WAAW5G,KAAI,SAAAC,GAAM,OACpF,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,EAA0Cb,mBAAS,UAAnD,mBAAOyH,EAAP,KAAsBC,EAAtB,KACA,EAAkC1H,mBAAS,GAA3C,mBAAO2H,EAAP,KAAkBC,EAAlB,KACA,EAA8B5H,mBAAS,IAAvC,mBAAO6H,EAAP,KAAgBC,EAAhB,KACA,EAAkC9H,mBAAS,IAA3C,mBAAO+H,EAAP,KAAkBC,EAAlB,KACA,EAA0DhI,oBAAS,GAAnE,mBAAOiI,EAAP,KAA8BC,EAA9B,KACA,EAAkClI,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEM2E,EAAU,uCAAG,4BAAAzE,EAAA,sEACK3D,EAAM4D,SAASyE,gBAAgB,CACnDjF,SACAiE,aACAE,SACAG,gBACAE,YACAE,QAASA,EAAU,IAAIZ,KAAKY,GAAW,KACvCE,UAAWA,EAAY,IAAId,KAAKc,GAAa,KAC7CE,0BATe,OACXrE,EADW,OAWjBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IAZX,2CAAH,qDAehB,OACE,oCACE,+CACA,8BACE,2CACA,uBAAO7C,KAAK,OAAOD,MAAOqC,EAAQlC,SAAU,SAACC,GAAD,OAAOkC,EAAUlC,EAAEC,OAAOL,UACtE,gDACA,wBAAQA,MAAOsG,EAAYnG,SAAU,SAAAC,GAAC,OAAImG,EAAcnG,EAAEC,OAAOL,QAAjE,SACE,cAACqG,EAAD,MAEF,2CACA,uBAAOpG,KAAK,OAAOD,MAAOwG,EAAQrG,SAAU,SAACC,GAAD,OAAOqG,EAAUrG,EAAEC,OAAOL,UACtE,mDACA,wBAAQA,MAAO2G,EAAexG,SAAU,SAAAC,GAAC,OAAIwG,EAAiBxG,EAAEC,OAAOL,QAAvE,SACE,cAAC0G,EAAD,MAEF,8CACA,uBAAOzG,KAAK,OAAOD,MAAO6G,EAAW1G,SAAU,SAACC,GAAD,OAAO0G,EAAa1G,EAAEC,OAAOL,UAC5E,+CACA,uBAAOC,KAAK,OAAOD,MAAOiH,EAAW9G,SAAU,SAACC,GAAD,OAAO8G,EAAa9G,EAAEC,OAAOL,UAC5E,6CACA,uBAAOC,KAAK,OAAOD,MAAO+G,EAAS5G,SAAU,SAACC,GAAD,OAAO4G,EAAW5G,EAAEC,OAAOL,UACxE,uDACA,uBAAOC,KAAK,WAAWK,QAAS6G,EAAuBhH,SAAU,SAACC,GAAD,OAAOgH,EAAyBhH,EAAEC,OAAOC,YAC1G,wBAAQU,QAASqG,EAAjB,4BAEF,4BAAI5E,QCvBK8E,EAnCK,SAACtI,GACnB,MAA4BC,mBAAS,IAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAA8BpD,mBAAS,IAAvC,mBAAOsI,EAAP,KAAgBC,EAAhB,KACA,EAAkCvI,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEMgF,EAAQ,uCAAG,4BAAA9E,EAAA,sEACO3D,EAAM4D,SAAS6E,SAAS,CAAErF,WADjC,OACTS,EADS,OAEfC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IAHb,2CAAH,qDAMR6E,EAAS,uCAAG,4BAAA/E,EAAA,sEACM3D,EAAM4D,SAAS8E,UAAU,CAAEH,QAASA,EAAQI,MAAM,OADxD,OACV9E,EADU,OAEhBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IAHZ,2CAAH,qDAMf,OACE,oCACE,wCACA,8BACE,2CACA,uBAAO7C,KAAK,OAAOD,MAAOqC,EAAQlC,SAAU,SAACC,GAAD,OAAOkC,EAAUlC,EAAEC,OAAOL,UACtE,wBAAQgB,QAAS0G,EAAjB,0BAEF,8BACE,4CACA,uBAAOzH,KAAK,OAAOD,MAAOwH,EAASrH,SAAU,SAACC,GAAD,OAAOqH,EAAWrH,EAAEC,OAAOL,QAAQE,YAAY,uBAC5F,wBAAQc,QAAS2G,EAAjB,2BAEF,4BAAIlF,QCcKoF,EA5CE,SAAC5I,GAChB,MAAkCC,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KACA,EAA4BxD,mBAAS,IAArC,mBAAO4I,EAAP,KAAeC,EAAf,KAEMC,EAAgB,iBACpB,CAAC,YAAa,UACXlI,KAAI,SAAAC,GAAM,OAAI,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAY1BkI,EAAO,uCAAG,4BAAArF,EAAA,sEACQ3D,EAAM4D,SAASqF,YAAY,CAAEJ,WADrC,OACRhF,EADQ,OAEdC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IAHd,2CAAH,qDAMb,OACE,oCACE,8CACA,8BACE,2CACA,wBACE9C,MAAO8H,EACP3H,SAAU,SAACC,IAvBG,SAACA,GAGrB,IAFA,IAAMG,EAAe,GACfC,EAAUJ,EAAEC,OACTI,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAAK,CACvC,MAA4BD,EAAQC,GAA5BE,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,MACdW,GAAUJ,EAAaK,KAAKZ,GAElC+H,EAAUxH,GAgBaM,CAAcT,IAC/BU,UAAU,EACVC,KAAK,IAJP,SAME,cAACiH,EAAD,MAEF,wBAAQhH,QAASiH,EAAjB,6BAEF,4BAAIxF,QCyCK0F,EAhFK,SAAClJ,GACnB,MAAkCC,mBAAS,IAA3C,mBAAOkJ,EAAP,KAAkBC,EAAlB,KACA,EAA4BnJ,mBAAS,IAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAAgCpD,mBAAS,GAAzC,mBAAOoJ,EAAP,KAAiBC,EAAjB,KACA,EAAkCrJ,mBAAS,UAA3C,mBAAOsJ,EAAP,KAAkBC,EAAlB,KACA,EAA0BvJ,mBAAS,IAAnC,mBAAOwJ,EAAP,KAAcC,EAAd,KACA,EAAsCzJ,mBAAS,IAA/C,mBAAO0J,EAAP,KAAoBC,EAApB,KACA,EAA8B3J,mBAAS,IAAvC,mBAAO4J,EAAP,KAAgBC,EAAhB,KACA,EAA8C7J,mBAAS,IAAvD,mBAAO8J,EAAP,KAAwBC,EAAxB,KACA,EAA0C/J,mBAAS,IAAnD,mBAAOgK,EAAP,KAAsBC,EAAtB,KACA,EAAkCjK,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEM0G,EAAW,uCAAG,sBAAAxG,EAAA,sEACZ3D,EAAM4D,SAASwG,iBAAiB,CACpCjB,YACAE,WACAjG,SACAmG,YACAE,QACAE,gBAPgB,2CAAH,qDAWXU,EAAW,uCAAG,sBAAA1G,EAAA,sEACZ3D,EAAM4D,SAASyG,YAAY,CAAElB,YAAWU,YAD5B,2CAAH,qDAIXS,EAAS,uCAAG,4BAAA3G,EAAA,sEACM3D,EAAM4D,SAAS2G,gBAAgB,CACnDpB,YACAY,gBAAiBA,EACb,IAAI7C,KAAK6C,QACTS,EACJP,cAAeA,EAAgB,IAAI/C,KAAK+C,QAAiBO,IAN3C,OACV3G,EADU,OAQhBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IATZ,2CAAH,qDAYf,OACE,oCACE,wCACA,8BACE,8FACA,+CACA,uBAAO7C,KAAK,OAAOD,MAAOoI,EAAWjI,SAAU,SAACC,GAAD,OAAOiI,EAAajI,EAAEC,OAAOL,UAC5E,2CACA,uBAAOC,KAAK,OAAOD,MAAOqC,EAAQlC,SAAU,SAACC,GAAD,OAAOkC,EAAUlC,EAAEC,OAAOL,UACtE,6CACA,uBAAOC,KAAK,OAAOD,MAAOsI,EAAUnI,SAAU,SAACC,GAAD,OAAOmI,EAAYnI,EAAEC,OAAOL,UAC1E,+CACA,uBAAOC,KAAK,OAAOD,MAAOwI,EAAWrI,SAAU,SAACC,GAAD,OAAOqI,EAAarI,EAAEC,OAAOL,UAC5E,0CACA,uBAAOC,KAAK,OAAOD,MAAO0I,EAAOvI,SAAU,SAACC,GAAD,OAAOuI,EAASvI,EAAEC,OAAOL,QAAQE,YAAY,oBACxF,gDACA,uBAAOD,KAAK,OAAOD,MAAO4I,EAAazI,SAAU,SAACC,GAAD,OAAOyI,EAAezI,EAAEC,OAAOL,QAAQE,YAAY,gBACpG,wBAAQc,QAASoI,EAAjB,4BAEF,8BACE,iDACA,+CACA,uBAAOnJ,KAAK,OAAOD,MAAOoI,EAAWjI,SAAU,SAACC,GAAD,OAAOiI,EAAajI,EAAEC,OAAOL,UAC5E,6CACA,uBAAOC,KAAK,OAAOD,MAAO8I,EAAS3I,SAAU,SAACC,GAAD,OAAO2I,EAAW3I,EAAEC,OAAOL,UACxE,wBAAQgB,QAASsI,EAAjB,6BAEF,8BACE,+CACA,uBAAOrJ,KAAK,OAAOD,MAAOoI,EAAWjI,SAAU,SAACC,GAAD,OAAOiI,EAAajI,EAAEC,OAAOL,UAC5E,sDACA,uBAAOC,KAAK,OAAOD,MAAOgJ,EAAiB7I,SAAU,SAACC,GAAD,OAAO6I,EAAmB7I,EAAEC,OAAOL,UACxF,oDACA,uBAAOC,KAAK,OAAOD,MAAOkJ,EAAe/I,SAAU,SAACC,GAAD,OAAO+I,EAAiB/I,EAAEC,OAAOL,UACpF,wBAAQgB,QAASuI,EAAjB,2BAEF,4BAAI9G,QCCKiH,EA5EW,SAACzK,GACzB,MAAkCC,mBAAS,IAA3C,mBAAOkJ,EAAP,KAAkBC,EAAlB,KACA,EAA0CnJ,mBAAS,IAAnD,mBAAOyK,EAAP,KAAsBC,EAAtB,KACMC,EAAc,iBAAM,CACxB,MACA,QACA,WACA,YACA,sBACA,WACA,WACA,WACA,QACA,gBACA/J,KAAI,SAAAC,GAAM,OACV,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAEf,EAAwBb,mBAAS,OAAjC,mBAAOe,EAAP,KAAa6J,EAAb,KACA,EAA4B5K,mBAAS,IAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAAkCpD,mBAAS,IAA3C,mBAAO+H,EAAP,KAAkBC,EAAlB,KACA,EAA8BhI,mBAAS,IAAvC,mBAAO6H,EAAP,KAAgBC,EAAhB,KACA,EAAkC9H,mBAAS,IAA3C,mBAAOuD,EAAP,KAAkBC,EAAlB,KAEMqH,EAAc,uCAAG,4BAAAnH,EAAA,sEACC3D,EAAM4D,SAASkH,eAAe,CAClD3B,YACAuB,kBAHmB,OACf7G,EADe,OAKrBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IANP,2CAAH,qDASdkH,EAAe,uCAAG,4BAAApH,EAAA,sEACA3D,EAAM4D,SAASmH,gBAAgB,CACnD/J,OACAoC,SACA+F,YACArB,QAASA,EAAU,IAAIZ,KAAKY,QAAW0C,EACvCxC,UAAWA,EAAY,IAAId,KAAKc,QAAawC,IANzB,OAChB3G,EADgB,OAQtBC,QAAQC,IAAIF,GACZJ,EAAaO,KAAKC,UAAUJ,IATN,2CAAH,qDAYrB,OACE,oCACE,8CACA,8BACE,oDACA,+CACA,uBAAO7C,KAAK,OAAOD,MAAOoI,EAAWjI,SAAU,SAACC,GAAD,OAAOiI,EAAajI,EAAEC,OAAOL,UAC5E,mDACA,uBAAOC,KAAK,OAAOD,MAAO2J,EAAexJ,SAAU,SAACC,GAAD,OAAOwJ,EAAiBxJ,EAAEC,OAAOL,UACpF,wBAAQgB,QAAS+I,EAAjB,gCAEF,8BACE,qDACA,+CACA,uBAAO9J,KAAK,OAAOD,MAAOoI,EAAWjI,SAAU,SAACC,GAAD,OAAOiI,EAAajI,EAAEC,OAAOL,UAC5E,yCACA,wBAAQA,MAAOC,EAAME,SAAU,SAAAC,GAAC,OAAI0J,EAAQ1J,EAAEC,OAAOL,QAArD,SACE,cAAC6J,EAAD,MAEF,2CACA,uBAAO5J,KAAK,OAAOD,MAAOqC,EAAQlC,SAAU,SAACC,GAAD,OAAOkC,EAAUlC,EAAEC,OAAOL,UACtE,+CACA,uBAAOC,KAAK,OAAOD,MAAOiH,EAAW9G,SAAU,SAACC,GAAD,OAAO8G,EAAa9G,EAAEC,OAAOL,UAC5E,6CACA,uBAAOC,KAAK,OAAOD,MAAO+G,EAAS5G,SAAU,SAACC,GAAD,OAAO4G,EAAW5G,EAAEC,OAAOL,UACxE,wBAAQgB,QAASgJ,EAAjB,iCAEF,4BAAIvH,QCYKwH,EAtEH,WACV,MAAkC/K,wBAASuK,GAA3C,mBAAO9H,EAAP,KAAkBuI,EAAlB,KACA,EAA8BhL,oBAAS,GAAvC,mBAAOgD,EAAP,KAAgBiI,EAAhB,KACA,EAAwCjL,mBAAS,IAAjD,mBAAOkL,EAAP,KAAqBC,EAArB,KAEMC,EAAmB,CAAC,cAAe,SAAU,UAAW,eAAgB,UACxEC,EAAiB,CAAC,UAAW,SAAU,gBAEvCC,EAAa,kBAChBtI,EAAO,UAAOoI,EAAqBC,GAAkBD,GACnDxK,KAAI,SAAAC,GAAM,OAAI,wBAAqBC,MAAOD,EAA5B,SAAqCA,GAAxBA,OAoBhC,OACE,iCACK4B,GACD,cAAC,EAAD,CAAaV,YAXC,SAACwJ,GACnBP,EAAaQ,YAAM,2BACdD,GADa,IAEhBE,WAAY,WAAQR,GAAW,IAC/BS,YAAa,WAAQT,GAAW,WAU9BxI,GACA,wBACE3B,MAAOoK,EACPjK,SAAU,SAACC,IA3BM,SAACA,GAGxB,IAFA,IAAMG,EAAe,GACfC,EAAUJ,EAAEC,OACTI,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAAK,CACvC,MAA4BD,EAAQC,GAA5BE,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,MACdW,GAAUJ,EAAaK,KAAKZ,GAElCqK,EAAgB9J,GAoBOsK,CAAiBzK,IAClCU,UAAU,EACVC,KAAK,IAJP,SAME,cAACyJ,EAAD,MAIF7I,GAAa,cAAC,EAAD,CAAWA,UAAWA,EAAWO,QAASA,IAEtDP,GAAaO,GAAWkI,EAAaU,SAAS,YAC/C,cAAC,EAAD,CAAUjI,SAAUlB,EAAUoJ,WAC7BpJ,GAAaO,GAAWkI,EAAaU,SAAS,WAC/C,cAAC,EAAD,CAAajI,SAAUlB,EAAUqJ,SAChCrJ,GAAaO,GAAWkI,EAAaU,SAAS,iBAC9C,cAAC,EAAD,CAAmBjI,SAAUlB,EAAUsJ,qBAEvCtJ,GAAayI,EAAaU,SAAS,gBACpC,cAAC,EAAD,CAAkBjI,SAAUX,EAAUP,EAAUuJ,YAAcvJ,EAAUuJ,YAAYC,kBACnFxJ,GAAayI,EAAaU,SAAS,WACpC,cAAC,EAAD,CAAajI,SAAUX,EAAUP,EAAUyJ,OAASzJ,EAAUyJ,OAAOD,kBACpExJ,GAAayI,EAAaU,SAAS,YACpC,cAAC,EAAD,CAAkBjI,SAAUX,EAAUP,EAAU0J,aAAe1J,EAAU0J,aAAaF,kBACrFxJ,GAAayI,EAAaU,SAAS,iBACpC,cAAC,EAAD,CAAmBjI,SAAUX,EAAUP,EAAU2J,aAAe3J,EAAU2J,aAAaH,kBACtFxJ,GAAayI,EAAaU,SAAS,WACpC,cAAC,EAAD,CAAajI,SAAUX,EAAUP,EAAU4J,OAAS5J,EAAU4J,OAAOJ,sBC3E7EK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3J,SAAS4J,eAAe,W","file":"static/js/main.9133b15a.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst ConfigPanel = (props) => {\n  const [clientId, setClientId] = useState('@AMER.OAUTHAP');\n  const [redirectUri, setRedirectUri] = useState('https://dos077.github.io/api-demo-react/');\n  const [storeAuth, setStoreAuth] = useState(true);\n  const [logInRedirect, setLogInRedirect] = useState(true);\n  const [scope, setScope] = useState([]);\n  \n  const ScopeOptions = () =>\n    ['PlaceTrades', 'AccountAccess', 'MoveMoney']\n      .map(option => <option key={option} value={option}>{option}</option>);\n\n  const handleOptions = (e) => {\n    const newSelection = [];\n    const options = e.target;\n    for (let i = 0; i < options.length; i++) {\n      const { selected, value } = options[i];\n      if (selected) newSelection.push(value);\n    }\n    setScope(newSelection);\n  }\n\n  const buildClient = () => {\n    props.buildClient({\n      clientId, redirectUri, storeAuth, logInRedirect, scope\n    });\n  }\n\n  return (\n    <section>\n      <h2>Setup API Client</h2>\n      <label>API Key:</label>\n      <input type=\"text\" value={clientId} placeholder=\"apiky@AMER.OAUTHAP\" onChange={(e) => setClientId(e.target.value)} />\n      <label>Redirect URI:</label>\n      <input type=\"text\" value={redirectUri} onChange={(e) => setRedirectUri(e.target.value)} />\n      <label>Local Store Token</label>\n      <input type=\"checkbox\" checked={storeAuth} onChange={(e) => setStoreAuth(e.target.checked)} />\n      <label>Redirect for Login</label>\n      <input type=\"checkbox\" checked={logInRedirect} onChange={(e) => setLogInRedirect(e.target.checked)} />\n      <label>scope</label>\n      <select\n        value={scope} \n        onChange={(e)=> {handleOptions(e)}}\n        multiple={true}\n        size=\"3\"\n      >\n        <ScopeOptions />\n      </select>\n      <button onClick={buildClient} value=\"initialize client\">\n        initialize client\n      </button>\n    </section>\n  )\n}\n\nexport default ConfigPanel;\n","const AuthPanel = (props) => {\n  const logIn = () => {\n    const query = new URLSearchParams(window.location.search);\n    const code = query ? query.get('code') : null;\n    props.APIClient.authentication.logIn(code);\n    window.history.pushState({}, document.title, window.location.pathname);\n  }\n\n  const logOut = () => {\n    props.APIClient.authentication.logOut();\n  }\n\n  if (window.location.search && (new URLSearchParams(window.location.search)).get('code'))\n    logIn();\n\n  return (\n    <section>\n      <h2>Option Chain</h2>\n      { !props.isLogIn && <p>\n        If logInRedirect is set to true, click login to be redirected to TD Ameritrade OAuth portal.\n      </p> }\n      { !props.isLogIn && <button onClick={logIn} >login</button> }\n      { props.isLogIn && <button onClick={logOut} >logout</button> }\n    </section>\n  );\n};\n\nexport default AuthPanel;\n","import React, { useState } from 'react';\n\nconst InstrumentsPanel = (props) => {\n  // const [cusip, setCusip] = useState();\n  const [symbol, setSymbol] = useState('');\n  const [projection, setProjection] = useState('fundamental');\n  const [screenStr, setScreenStr] = useState('');\n\n  const searchInstruments = async () => {\n    const resJson = await props.endPoint.searchInstruments({\n      symbol,\n      projection,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Instruments</h2>\n      <p>\n        <label>Search Instruments</label>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>projection</label>\n        <input type=\"text\" value={projection} onChange={(e) => setProjection(e.target.value)} />\n        <button onClick={searchInstruments}>search</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default InstrumentsPanel;\n","import React, { useState } from 'react';\n\nconst MoversPanel = (props) => {\n  const [index, setindex] = useState('');\n  const [direction, setDirection] = useState('up');\n  const [change, setChange] = useState('value');\n  const [screenStr, setScreenStr] = useState('');\n\n  const DirectionOptions = () => ['up', 'down'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const ChangeOptions = () => ['value', 'percent'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n\n  const getMovers = async () => {\n    const resJson = await props.endPoint.getMovers({\n      index,\n      direction,\n      change,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Movers</h2>\n      <p>\n        <label>Show Movers</label>\n        <label>index</label>\n        <input type=\"text\" value={index} placeholder=\"ie. $COMPX, $DJI\" onChange={e => setindex(e.target.value)} />\n        <label>direction</label>\n        <select value={direction} onChange={e => setDirection(e.target.value)}>\n          <DirectionOptions />\n        </select>\n        <label>change</label>\n        <select v-value={change} onChange={e => setChange(e.target.value)}>\n          <ChangeOptions />\n        </select>\n        <button onClick={getMovers}>get movers</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  );\n}\n\nexport default MoversPanel;\n","import React, { useState } from 'react';\n\nconst OptionChainPanel = (props) => {\n  const [symbol, setSymbol] = useState('');\n  const ContractOptions = () => ['ALL', 'CALL', 'PUT'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [contractType, setContractType] = useState('ALL');\n  const [strikeCount, setStrikeCount] = useState(5);\n  const [includeQuotes, setIncludeQuotes] = useState(false);\n  const StrategyOptions = () => ['SINGLE',\n    'ANALYTICAL',\n    'COVERED',\n    'VERTICAL',\n    'CALENDAR',\n    'STRANGLE',\n    'STRADDLE',\n    'BUTTERFLY',\n    'CONDOR',\n    'DIAGONAL',\n    'COLLAR',\n    'ROLL',\n  ].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [strategy, setStrategy] = useState('SINGLE');\n  const [strikeInterval, setStrikeInterval] = useState('');\n  const [strike, setStrike] = useState('');\n  const RangeOptions = () => ['ALL', 'ITM', 'NTM', 'OTM', 'SAK', 'SBK', 'SNK'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [range, setRange] = useState('ALL');\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [volatility, setVolatility] = useState('');\n  const [underlyingPrice, setUnderlyingPrice] = useState('');\n  const [interestRate, setInterestRate] = useState('');\n  const [daysToExpiration, setDaysToExpiration] = useState('');\n  const [expMonth, setExpMonth] = useState('');\n  const OptionTypeOptions = () => ['S', 'NS', 'ALL'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [optionType, setOptionType] = useState('ALL');\n  const [screenStr, setScreenStr] = useState('');\n\n  const getOptionChain = async () => {\n    const params = {\n      symbol,\n      contractType,\n      strikeCount,\n      includeQuotes,\n      strategy,\n      interval: strikeInterval,\n      strike,\n      range,\n      fromDate: fromDate ? new Date(fromDate) : null,\n      toDate: toDate ? new Date(toDate) : null,\n      volatility,\n      underlyingPrice,\n      interestRate,\n      daysToExpiration,\n      expMonth,\n      optionType,\n    };\n    const resJson = await props.endPoint.getOptionChain(params);\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Option Chain</h2>\n      <p>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>contract type</label>\n        <select value={contractType} onChange={e => setContractType(e.target.value)}>\n          <ContractOptions />\n        </select>\n        <label>strike count</label>\n        <input type=\"text\" value={strikeCount} onChange={(e) => setStrikeCount(e.target.value)} />\n        <label>include quotes</label>\n        <input type=\"checkbox\" checked={includeQuotes} onChange={(e) => setIncludeQuotes(e.target.checked)} />\n        <label>strategy</label>\n        <select value={strategy} onChange={e => setStrategy(e.target.value)}>\n          <StrategyOptions />\n        </select>\n        <label>interval</label>\n        <input type=\"text\" value={strikeInterval} onChange={(e) => setStrikeInterval(e.target.value)} />\n        <label>strike</label>\n        <input type=\"text\" value={strike} onChange={(e) => setStrike(e.target.value)} />\n        <label>range</label>\n        <select value={range} onChange={e => setRange(e.target.value)}>\n          <RangeOptions />\n        </select>\n        <label>from date</label>\n        <input type=\"date\" value={fromDate} onChange={(e) => setFromDate(e.target.value)} />\n        <label>to date</label>\n        <input type=\"date\" value={toDate} onChange={(e) => setToDate(e.target.value)} />\n        <label>volatility</label>\n        <input type=\"text\" value={volatility} onChange={(e) => setVolatility(e.target.value)} />\n        <label>underlying price</label>\n        <input type=\"text\" value={underlyingPrice} onChange={(e) => setUnderlyingPrice(e.target.value)} />\n        <label>interest rate</label>\n        <input type=\"text\" value={interestRate} onChange={(e) => setInterestRate(e.target.value)} />\n        <label>days to expiration</label>\n        <input type=\"text\" value={daysToExpiration} onChange={(e) => setDaysToExpiration(e.target.value)} />\n        <label>expire mont</label>\n        <input type=\"text\" value={expMonth} onChange={(e) => setExpMonth(e.target.value)} />\n        <label>option type</label>\n        <select value={optionType} onChange={e => setOptionType(e.target.value)}>\n          <OptionTypeOptions />\n        </select>\n\n        <button onClick={getOptionChain}>get chain</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default OptionChainPanel;\n","import React, { useState } from 'react';\n\nconst PriceHistoryPanel = (props) => {\n  const [symbol, setSymbol] = useState('');\n  const PeriodTypeOptions = () => ['day', 'month', 'year', 'ytd'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [periodType, setPeriodType] = useState('day');\n  const [period, setPeriod] = useState(1);\n  const FrequencyTypeOptions = () => ['minute', 'daily', 'weekly', 'monthly'].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [frequencyType, setFrequencyType] = useState('minute');\n  const [frequency, setFrequency] = useState(1);\n  const [endDate, setEndDate] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [needExtendedHoursData, setNeedExtendedHoursData] = useState(false);\n  const [screenStr, setScreenStr] = useState('');\n\n  const getHistory = async () => {\n    const resJson = await props.endPoint.getPriceHistory({\n      symbol,\n      periodType,\n      period,\n      frequencyType,\n      frequency,\n      endDate: endDate ? new Date(endDate) : null,\n      startDate: startDate ? new Date(startDate) : null,\n      needExtendedHoursData,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  };\n\n  return (\n    <section>\n      <h2>Price History</h2>\n      <p>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>period type</label>\n        <select value={periodType} onChange={e => setPeriodType(e.target.value)}>\n          <PeriodTypeOptions />\n        </select>\n        <label>period</label>\n        <input type=\"text\" value={period} onChange={(e) => setPeriod(e.target.value)} />\n        <label>frequency type</label>\n        <select value={frequencyType} onChange={e => setFrequencyType(e.target.value)}>\n          <FrequencyTypeOptions />\n        </select>\n        <label>frequency</label>\n        <input type=\"text\" value={frequency} onChange={(e) => setFrequency(e.target.value)} />\n        <label>start date</label>\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        <label>end date</label>\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        <label>Extended Hour Data</label>\n        <input type=\"checkbox\" checked={needExtendedHoursData} onChange={(e) => setNeedExtendedHoursData(e.target.checked)} />\n        <button onClick={getHistory}>get history</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  );\n}\n\nexport default PriceHistoryPanel;\n","import React, { useState } from 'react';\n\nconst QuotesPanel = (props) => {  \n  const [symbol, setSymbol] = useState('');\n  const [symbols, setSymbols] = useState('');\n  const [screenStr, setScreenStr] = useState('');\n\n  const getQuote = async () => {\n    const resJson = await props.endPoint.getQuote({ symbol });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  const getQuotes = async () => {\n    const resJson = await props.endPoint.getQuotes({ symbols: symbols.split(' ') });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Quotes</h2>\n      <p>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <button onClick={getQuote}>get quote</button>\n      </p>\n      <p>\n        <label>symbols</label>\n        <input type=\"text\" value={symbols} onChange={(e) => setSymbols(e.target.value)} placeholder=\"separated by space\" />\n        <button onClick={getQuotes}>get quotes</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  );\n};\n\nexport default QuotesPanel;\n","import React, { useState } from 'react';\n\nconst AccPanel = (props) => {\n  const [screenStr, setScreenStr] = useState('');\n  const [fields, setFields] = useState([]);\n  \n  const FieldsOptions = () =>\n    ['positions', 'orders']\n      .map(option => <option key={option} value={option}>{option}</option>);\n\n  const handleOptions = (e) => {\n    const newSelection = [];\n    const options = e.target;\n    for (let i = 0; i < options.length; i++) {\n      const { selected, value } = options[i];\n      if (selected) newSelection.push(value);\n    }\n    setFields(newSelection);\n  }\n  \n  const getAccs = async () => {\n    const resJson = await props.endPoint.getAccounts({ fields });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Account Info</h2>\n      <p>\n        <label>fields</label>\n        <select\n          value={fields} \n          onChange={(e)=> {handleOptions(e)}}\n          multiple={true}\n          size=\"2\"\n        >\n          <FieldsOptions />\n        </select>\n        <button onClick={getAccs}>get accounts</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default AccPanel;\n","import React, { useState } from 'react';\n\nconst OrdersPanel = (props) => {  \n  const [accountId, setAccountId] = useState('');\n  const [symbol, setSymbol] = useState('');\n  const [quantity, setQuantity] = useState(0);\n  const [orderType, setOrderType] = useState('MARKET');\n  const [price, setPrice] = useState('');\n  const [instruction, setInstruction] = useState('');\n  const [orderId, setOrderId] = useState('');\n  const [fromEnteredTime, setFromEnteredTime] = useState('');\n  const [toEnteredTime, setToEnteredTime] = useState('');\n  const [screenStr, setScreenStr] = useState('');\n\n  const placeEquity = async () => {\n    await props.endPoint.placeOrderEquity({\n      accountId,\n      quantity,\n      symbol,\n      orderType,\n      price,\n      instruction,\n    });\n  }\n\n  const cancelOrder = async () => {    \n    await props.endPoint.cancelOrder({ accountId, orderId });\n  }\n\n  const getOrders = async () => {\n    const resJson = await props.endPoint.getOrdersByPath({\n      accountId,\n      fromEnteredTime: fromEnteredTime\n        ? new Date(fromEnteredTime)\n        : undefined,\n      toEnteredTime: toEnteredTime ? new Date(toEnteredTime) : undefined,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Orders</h2>\n      <p>\n        <label>Place Equity Order(Placing Actual Order in Your Account!)</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>quantity</label>\n        <input type=\"text\" value={quantity} onChange={(e) => setQuantity(e.target.value)} />\n        <label>order type</label>\n        <input type=\"text\" value={orderType} onChange={(e) => setOrderType(e.target.value)} />\n        <label>price</label>\n        <input type=\"text\" value={price} onChange={(e) => setPrice(e.target.value)} placeholder=\"for limit order\" />\n        <label>instruction</label>\n        <input type=\"text\" value={instruction} onChange={(e) => setInstruction(e.target.value)} placeholder=\"BUY or SELL\" />\n        <button onClick={placeEquity}>place order</button>\n      </p>\n      <p>\n        <label>Cancel Order</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>order ID</label>\n        <input type=\"text\" value={orderId} onChange={(e) => setOrderId(e.target.value)} />\n        <button onClick={cancelOrder}>cancel order</button>\n      </p>\n      <p>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>from entered date</label>\n        <input type=\"date\" value={fromEnteredTime} onChange={(e) => setFromEnteredTime(e.target.value)} />\n        <label>to entered date</label>\n        <input type=\"date\" value={toEnteredTime} onChange={(e) => setToEnteredTime(e.target.value)} />\n        <button onClick={getOrders}>get orders</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default OrdersPanel;\n","import React, { useState } from 'react';\n\nconst TransactionsPanel = (props) => {\n  const [accountId, setAccountId] = useState('');\n  const [transactionId, setTransactionId] = useState('');\n  const TypeOptions = () => [\n    'ALL',\n    'TRADE',\n    'BUY_ONLY',\n    'SELL_ONLY',\n    'CASH_IN_OR_CASH_OUT',\n    'CHECKING',\n    'DIVIDEND',\n    'INTEREST',\n    'OTHER',\n    'ADVISOR_FEES',\n  ].map(option => \n    <option key={option} value={option}>{option}</option>\n  );\n  const [type, setType] = useState('ALL');\n  const [symbol, setSymbol] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [screenStr, setScreenStr] = useState('');\n\n  const getTransaction = async () => {\n    const resJson = await props.endPoint.getTransaction({\n      accountId,\n      transactionId,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  const getTransactions = async () => {\n    const resJson = await props.endPoint.getTransactions({\n      type,\n      symbol,\n      accountId,\n      endDate: endDate ? new Date(endDate) : undefined,\n      startDate: startDate ? new Date(startDate) : undefined,\n    });\n    console.log(resJson);\n    setScreenStr(JSON.stringify(resJson));\n  }\n\n  return (\n    <section>\n      <h2>Transactions</h2>\n      <p>\n        <label>get transaction</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>transaction ID</label>\n        <input type=\"text\" value={transactionId} onChange={(e) => setTransactionId(e.target.value)} />\n        <button onClick={getTransaction}>get transaction</button>\n      </p>\n      <p>\n        <label>get transactions</label>\n        <label>account ID</label>\n        <input type=\"text\" value={accountId} onChange={(e) => setAccountId(e.target.value)} />\n        <label>type</label>\n        <select value={type} onChange={e => setType(e.target.value)}>\n          <TypeOptions />\n        </select>\n        <label>symbol</label>\n        <input type=\"text\" value={symbol} onChange={(e) => setSymbol(e.target.value)} />\n        <label>start date</label>\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        <label>end date</label>\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        <button onClick={getTransactions}>get transactions</button>\n      </p>\n      <p>{screenStr}</p>\n    </section>\n  )\n}\n\nexport default TransactionsPanel;","import React, { useState } from 'react';\nimport TDAPI from '@i077/tda-api-nodejs-unofficial';\n\nimport './App.css';\nimport ConfigPanel from './components/ConfigPanel';\nimport AuthPanel from './components/AuthPanel';\nimport InstrumentsPanel from './components/InstrumentPanel';\nimport MoversPanel from './components/MoversPanel';\nimport OptionChainPanel from './components/OptionChainPanel';\nimport PriceHistoryPanel from './components/PriceHistoryPanel';\nimport QuotesPanel from './components/QuotesPanel';\nimport AccPanel from './components/AccPanel';\nimport OrdersPanel from './components/OrdersPanel';\nimport TransactionsPanel from './components/TransactionsPanel';\n\nconst App = () => {\n  const [APIClient, setAPIClient] = useState(undefined);\n  const [isLogIn, setIsLogIn] = useState(false);\n  const [tabsSelected, setTabsSelected] = useState([]);\n  \n  const unauthTabOptions = ['instruments', 'movers', 'options', 'priceHistory', 'quotes'];\n  const authTabOptions = ['account', 'orders', 'transactions'];\n\n  const TabOptions = () =>\n    (isLogIn ? [...unauthTabOptions, ...authTabOptions] : unauthTabOptions)\n      .map(option => <option key={option} value={option}>{option}</option>);\n\n  const handleTabOptions = (e) => {\n    const newSelection = [];\n    const options = e.target;\n    for (let i = 0; i < options.length; i++) {\n      const { selected, value } = options[i];\n      if (selected) newSelection.push(value);\n    }\n    setTabsSelected(newSelection);\n  }\n\n  const buildClient = (config) => {\n    setAPIClient(TDAPI({\n      ...config,\n      afterLogIn: () => { setIsLogIn(true) },\n      afterLogOut: () => { setIsLogIn(false) }\n    }));\n  }\n\n  return (\n    <div>\n      { !APIClient &&\n        <ConfigPanel buildClient={buildClient} />\n      }\n\n      { APIClient &&\n        <select\n          value={tabsSelected}\n          onChange={(e)=> {handleTabOptions(e)}}\n          multiple={true}\n          size=\"5\"\n        >\n          <TabOptions />\n        </select>\n      }\n      \n      { APIClient && <AuthPanel APIClient={APIClient} isLogIn={isLogIn} /> }\n\n      { (APIClient && isLogIn && tabsSelected.includes('account')) &&\n        <AccPanel endPoint={APIClient.accounts} /> }\n      { (APIClient && isLogIn && tabsSelected.includes('orders')) &&\n        <OrdersPanel endPoint={APIClient.orders} /> }\n      { (APIClient && isLogIn && tabsSelected.includes('transactions')) &&\n         <TransactionsPanel endPoint={APIClient.transactionHistory} /> }\n      \n      { (APIClient && tabsSelected.includes('instruments')) &&\n        <InstrumentsPanel endPoint={isLogIn ? APIClient.instruments : APIClient.instruments.unauthenticated } /> }\n      { (APIClient && tabsSelected.includes('movers')) &&\n        <MoversPanel endPoint={isLogIn ? APIClient.movers : APIClient.movers.unauthenticated} /> }\n      { (APIClient && tabsSelected.includes('options')) &&\n        <OptionChainPanel endPoint={isLogIn ? APIClient.optionChains : APIClient.optionChains.unauthenticated} /> }\n      { (APIClient && tabsSelected.includes('priceHistory')) &&\n        <PriceHistoryPanel endPoint={isLogIn ? APIClient.priceHistory : APIClient.priceHistory.unauthenticated} /> }\n      { (APIClient && tabsSelected.includes('quotes')) &&\n        <QuotesPanel endPoint={isLogIn ? APIClient.quotes : APIClient.quotes.unauthenticated} /> }\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}